{"version":3,"sources":["assets/videos/Sunny.mp4","assets/videos/Sunny.webm","assets/icons/wi-day-sunny.svg","assets/icons/humidity.svg","assets/icons/pressure.svg","assets/icons/wind.svg","assets/icons/low-temperature.svg","assets/icons/high-temperature.svg","assets/icons/search.svg","assets/icons/clock.svg","assets/icons/sunrise.svg","assets/icons/sunset.svg","assets/icons/visibility.svg","components/atoms/video/Video.jsx","components/atoms/image/Image.jsx","components/atoms/label/Label.jsx","components/molecules/city/City.jsx","components/atoms/input-field/InputField.jsx","components/molecules/search-box/SearchBox.jsx","components/molecules/weather-footer/WeatherFooter.jsx","components/organisms/footer/Footer.jsx","components/organisms/weather/Weather.jsx","utils/Functions.jsx","components/templates/HomePage.jsx","constants/Constants.jsx","Entry.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Video","props","source_mp4","source_webm","react_default","a","createElement","autoPlay","muted","loop","id","src","type","Image","image","className","alt","onClick","title","Label","text","City","weatherObj","obj","value","concat","weather","humidity","pressure","wind","speed","toFixed","max","highTemperature","min","lowTemperature","atmosphere","cityName","country","temperatureInCelsius","temperature","lat","coordinates","lon","Fragment","image_Image","sunny","label_Label","map","i","key","InputField","onChange","placeholder","handleKeyDown","onKeyDown","SearchBox","setCity","getWeatherData","input_field_InputField","search_icon","WeatherFooter","console","log","formatDate","unix","date","format","sunrise","sunset","visibility","Footer","Weather","city_City","weather_footer_WeatherFooter","search_box_SearchBox","footer_Footer","WeatherObj","weatherReport","name","sys","dt","main","temp","temp_max","temp_min","coord","description","degree","deg","clouds","all","HomePage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchedCity","bind","assertThisInitialized","_handleKeyDown","_this2","axios","get","then","result","setState","data","e","target","style","position","weather_Weather","video_Video","sunny_mp4","sunny_webm","Component","Entry","templates_HomePage","Boolean","window","location","hostname","match","ReactDOM","render","src_Entry","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58e628d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sunny.5719f0d1.mp4\";","module.exports = __webpack_public_path__ + \"static/media/Sunny.d76db043.webm\";","module.exports = __webpack_public_path__ + \"static/media/wi-day-sunny.8c8e6c8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/humidity.df04dfcd.svg\";","module.exports = __webpack_public_path__ + \"static/media/pressure.7c1ef722.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.bb5e05c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/low-temperature.23382bac.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-temperature.e8531215.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.961fff97.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.86978548.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunrise.cf393201.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.8247736e.svg\";","module.exports = __webpack_public_path__ + \"static/media/visibility.ea67218b.svg\";","import React from \"react\";\n\nconst Video = props => {\n  const { source_mp4, source_webm } = props;\n  return (\n    <video autoPlay muted loop id=\"video\">\n      <source src={source_mp4} type=\"video/mp4\" />\n      <source src={source_webm} type=\"video/webm\" />\n      Sorry, your browser doesn't support embedded videos.\n    </video>\n  );\n};\n\nexport default Video;\n","import React from \"react\";\n\nconst Image = props => {\n  const { image, className, alt, id, onClick, title } = props;\n  return (\n    <img\n      id={id}\n      src={image}\n      className={className}\n      alt={alt}\n      title={title}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default Image;\n","import React from \"react\";\n\nconst Label = props => {\n  const { text, className } = props;\n  return <label className={className}>{text}</label>;\n};\n\nexport default Label;\n","import React from \"react\";\nimport Image from \"../../atoms/image\";\nimport Label from \"../../atoms/label\";\nimport sunny from \"../../../assets/icons/wi-day-sunny.svg\";\nimport \"./City-style.scss\";\n\nimport humidity from \"../../../assets/icons/humidity.svg\";\nimport pressure from \"../../../assets/icons/pressure.svg\";\nimport wind from \"../../../assets/icons/wind.svg\";\nimport lowTemperature from \"../../../assets/icons/low-temperature.svg\";\nimport highTemperature from \"../../../assets/icons/high-temperature.svg\";\n\nconst City = props => {\n  const { weatherObj } = props;\n  const obj = [\n    {\n      title: \"Humidity\",\n      value: `${weatherObj.weather.humidity} %`,\n      image: humidity\n    },\n    {\n      title: \"Air Pressure\",\n      value: `${weatherObj.weather.pressure} PS`,\n      image: pressure\n    },\n    {\n      title: \"Wind Speed\",\n      value: `${(weatherObj.wind.speed * 1.609).toFixed(2)} km/h`,\n      image: wind\n    },\n    {\n      title: \"Max Temp\",\n      value: `${(((weatherObj.weather.max - 32) * 5) / 9).toFixed(0)} ℃`,\n      image: highTemperature\n    },\n    {\n      title: \"Min Temp\",\n      value: `${(((weatherObj.weather.min - 32) * 5) / 9).toFixed(0)} ℃`,\n      image: lowTemperature\n    }\n  ];\n  const atmosphere = weatherObj.atmosphere.type;\n  const cityName = weatherObj.cityName;\n  const country = `, ${weatherObj.country}`;\n  const temperatureInCelsius = `${(\n    ((weatherObj.weather.temperature - 32) * 5) /\n    9\n  ).toFixed(0)} ℃`;\n  const lat = `Lat : ${weatherObj.coordinates.lat}`;\n  const lon = `Lon : ${weatherObj.coordinates.lon}`;\n  return (\n    <>\n      <div className=\"container\">\n        <div id=\"column\" className=\"ml25\">\n          <Image image={sunny} className=\"climate_icon\" />\n          <Label text={atmosphere} className=\"city city--climate\" />\n          <div id=\"row horizontal\" className=\"cityWrap\">\n            <Label text={cityName} className=\"city city--city\" />\n            <Label text={country} className=\"city city--city\" />\n          </div>\n          <Label text={lat} className=\"city city--coordinates\" />\n          <Label text={lon} className=\"city city--coordinates\" />\n          <Label\n            text={temperatureInCelsius}\n            className=\"city city--temperature mt20\"\n          />\n        </div>\n        <div>\n          {obj.map((title, i) => {\n            return (\n              <div key={i} id=\"row\" className=\"alignStart mb20 mr25\">\n                <Image image={title.image} className=\"climate_icon--small\" />\n                <div id=\"column\">\n                  <Label text={title.title} className=\"city city--title\" />\n                  <Label text={title.value} className=\"city city--value\" />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default City;\n","import React from \"react\";\nimport \"./InputField-style.scss\";\n\nconst InputField = props => {\n  const { type, onChange, placeholder, className, handleKeyDown } = props;\n  return (\n    <input\n      type={type}\n      onChange={onChange}\n      className={className}\n      placeholder={placeholder}\n      onKeyDown={handleKeyDown}\n    />\n  );\n};\n\nexport default InputField;\n","import React from \"react\";\nimport InputField from \"../../atoms/input-field\";\nimport Image from \"../../atoms/image\";\nimport search_icon from \"../../../assets/icons/search.svg\";\nimport \"./SearchBox-style.scss\";\n\nconst SearchBox = props => {\n  const { setCity, getWeatherData, handleKeyDown } = props;\n  return (\n    <>\n      <div className=\"search\" id=\"horizontal\">\n        <InputField\n          type=\"text\"\n          onChange={setCity}\n          placeholder=\"Search A City...\"\n          className=\"search_input search_input--text\"\n          handleKeyDown={handleKeyDown}\n        />\n        <Image\n          image={search_icon}\n          className=\"search_icon\"\n          onClick={getWeatherData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport Image from \"../../atoms/image\";\nimport Label from \"../../atoms/label\";\n\nimport \"./WeatherFooter-style.scss\";\n\nimport date from \"../../../assets/icons/clock.svg\";\nimport sunrise from \"../../../assets/icons/sunrise.svg\";\nimport sunset from \"../../../assets/icons/sunset.svg\";\nimport visibility from \"../../../assets/icons/visibility.svg\";\n\nimport formatDate from \"moment\";\n\nconst WeatherFooter = props => {\n  const { weatherObj } = props;\n  console.log(\"weatherObj:\", weatherObj);\n  const obj = [\n    {\n      title: \"Date\",\n      value: formatDate\n        .unix(weatherObj.date)\n        .format(\"ddd, Do, MMM YYYY\"),\n      image: date\n    },\n    {\n      title: \"Sunrise\",\n      value: formatDate.unix(weatherObj.sunrise).format(\"h:mm A\"),\n      image: sunrise\n    },\n    {\n      title: \"Sunset\",\n      value: formatDate.unix(weatherObj.sunset).format(\"h:mm A\"),\n      image: sunset\n    },\n    {\n      title: \"Visibility\",\n      value: `${weatherObj.visibility / 1000} km`,\n      image: visibility\n    }\n  ];\n  return (\n    <>\n      <div className=\"footerContainer\" id=\"row\">\n        {obj.map((title, i) => {\n          return (\n            <div key={i} id=\"row\" className=\"alignCenter ml25\">\n              <Image\n                image={title.image}\n                className=\"footer_icon\"\n                title={title.title}\n              />\n              <Label text={title.value} className=\"whiteText\" />\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default WeatherFooter;\n","import React from \"react\";\nimport \"./Footer-style.scss\";\n\nconst Footer = props => {\n  return (\n    <>\n      <footer>Copyright &copy; 2019, Made by Rishav.</footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport City from \"../../molecules/city\";\nimport SearchBox from \"../../molecules/search-box\";\nimport WeatherFooter from \"../../molecules/weather-footer\";\nimport Footer from \"../../organisms/footer\";\n\nconst Weather = props => {\n  const { setCity, getWeatherData, weatherObj, handleKeyDown } = props;\n  return (\n    <>\n      <City weatherObj={weatherObj} />\n      <WeatherFooter weatherObj={weatherObj} />\n      <SearchBox\n        setCity={setCity}\n        getWeatherData={getWeatherData}\n        handleKeyDown={handleKeyDown}\n      />\n      <Footer />\n    </>\n  );\n};\n\nexport default Weather;\n","var Obj = {};\n\nexport function WeatherObj(weatherReport) {\n  Obj = {\n    cityName: weatherReport.name,\n    country: weatherReport.sys.country,\n    date: weatherReport.dt,\n    sunrise: weatherReport.sys.sunrise,\n    sunset: weatherReport.sys.sunset,\n    weather: {\n      temperature: weatherReport.main.temp,\n      pressure: weatherReport.main.pressure,\n      humidity: weatherReport.main.humidity,\n      max: weatherReport.main.temp_max,\n      min: weatherReport.main.temp_min\n    },\n    coordinates: {\n      lat: weatherReport.coord.lat,\n      lon: weatherReport.coord.lon\n    },\n    visibility: weatherReport.visibility,\n    atmosphere: {\n      type: weatherReport.weather[0].main,\n      description: weatherReport.weather[0].description\n    },\n    wind: {\n      speed: weatherReport.wind.speed,\n      degree: weatherReport.wind.deg\n    },\n    clouds: weatherReport.clouds.all\n  };\n  return Obj;\n}\n\nexport const setWeatherReport = () => {\n  return\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../constants/Constants\";\nimport Video from \"../atoms/video\";\n\n//Import background videos\nimport sunny_mp4 from \"../../assets/videos/Sunny.mp4\";\nimport sunny_webm from \"../../assets/videos/Sunny.webm\";\n\nimport Weather from \"../organisms/weather\";\n\nimport { WeatherObj } from \"../../utils/Functions\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchedCity: \"delhi\",\n      weatherReport: null\n    };\n    this.setCity = this.setCity.bind(this);\n    this.getWeatherData = this.getWeatherData.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n  }\n\n  componentDidMount() {\n    this.getWeatherData();\n  }\n\n  getWeatherData() {\n    axios\n      .get(\n        `${baseUrl}/weather?APPID=ea4a711d209edbf43f3b367871a1edc8&units=imperial&q=${\n          this.state.searchedCity\n        }`\n      )\n      .then(result => this.setState({ weatherReport: result.data }));\n  }\n\n  setCity(e) {\n    this.setState({ searchedCity: e.target.value });\n  }\n\n  _handleKeyDown(e) {\n    if (e.key === \"Enter\") {\n      this.getWeatherData();\n    }\n  }\n\n  render() {\n    const { weatherReport } = this.state;\n    if (!weatherReport) {\n      return null;\n    }\n    return (\n      <>\n        <div style={{ position: \"fixed\" }}>\n          <Weather\n            weatherObj={WeatherObj(weatherReport)}\n            setCity={this.setCity}\n            getWeatherData={this.getWeatherData}\n            handleKeyDown={this._handleKeyDown}\n          />\n          <Video source_mp4={sunny_mp4} source_webm={sunny_webm} />\n          <div className=\"overlay\" />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n","export const baseUrl = \"http://api.openweathermap.org/data/2.5/\";\n","import React, { Component } from \"react\";\nimport HomePage from \"./components/templates/HomePage\";\n\nclass Entry extends Component {\n  render() {\n    return <HomePage />;\n  }\n}\n\nexport default Entry;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Entry from \"./Entry\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Entry />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}